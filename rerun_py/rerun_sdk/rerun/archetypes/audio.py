# DO NOT EDIT! This file was auto-generated by crates/build/re_types_builder/src/codegen/python/mod.rs
# Based on "crates/store/re_types/definitions/rerun/archetypes/audio.fbs".

# You can extend this class by creating a "AudioExt" class in "audio_ext.py".

from __future__ import annotations

from typing import Any

from attrs import define, field

from .. import components, datatypes
from .._baseclasses import (
    Archetype,
)
from ..error_utils import catch_and_log_exceptions

__all__ = ["Audio"]


@define(str=False, repr=False, init=False)
class Audio(Archetype):
    """**Archetype**: Raw uncompressed PCM-encoded audio data (e.g. WAV, AIFF, etc.)."""

    def __init__(self: Any, data: datatypes.TensorDataLike, *, sample_rate: datatypes.Float32Like | None = None):
        """
        Create a new instance of the Audio archetype.

        Parameters
        ----------
        data:
            The audio data.

            Either a single-channel mono vector, or a 2xN matrix for stereo.
        sample_rate:
            Sample-rate of the audio data, in Hz.

            Commonly 44100 Hz (default) or 48000 Hz.

        """

        # You can define your own __init__ function as a member of AudioExt in audio_ext.py
        with catch_and_log_exceptions(context=self.__class__.__name__):
            self.__attrs_init__(data=data, sample_rate=sample_rate)
            return
        self.__attrs_clear__()

    def __attrs_clear__(self) -> None:
        """Convenience method for calling `__attrs_init__` with all `None`s."""
        self.__attrs_init__(
            data=None,  # type: ignore[arg-type]
            sample_rate=None,  # type: ignore[arg-type]
        )

    @classmethod
    def _clear(cls) -> Audio:
        """Produce an empty Audio, bypassing `__init__`."""
        inst = cls.__new__(cls)
        inst.__attrs_clear__()
        return inst

    data: components.TensorDataBatch = field(
        metadata={"component": "required"},
        converter=components.TensorDataBatch._required,  # type: ignore[misc]
    )
    # The audio data.
    #
    # Either a single-channel mono vector, or a 2xN matrix for stereo.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    sample_rate: components.AudioSampleRateBatch | None = field(
        metadata={"component": "optional"},
        default=None,
        converter=components.AudioSampleRateBatch._optional,  # type: ignore[misc]
    )
    # Sample-rate of the audio data, in Hz.
    #
    # Commonly 44100 Hz (default) or 48000 Hz.
    #
    # (Docstring intentionally commented out to hide this field from the docs)

    __str__ = Archetype.__str__
    __repr__ = Archetype.__repr__  # type: ignore[assignment]
