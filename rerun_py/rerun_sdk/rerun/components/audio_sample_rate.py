# DO NOT EDIT! This file was auto-generated by crates/re_types_builder/src/codegen/python.rs
# Based on "crates/re_types/definitions/rerun/components/audio_sample_rate.fbs".

# You can extend this class by creating a "AudioSampleRateExt" class in "audio_sample_rate_ext.py".

from __future__ import annotations

from typing import TYPE_CHECKING, Any, Sequence, Union

import numpy as np
import numpy.typing as npt
import pyarrow as pa
from attrs import define, field

from .._baseclasses import BaseBatch, BaseExtensionType, ComponentBatchMixin

__all__ = [
    "AudioSampleRate",
    "AudioSampleRateArrayLike",
    "AudioSampleRateBatch",
    "AudioSampleRateLike",
    "AudioSampleRateType",
]


@define(init=False)
class AudioSampleRate:
    """
    **Component**: Sample-rate of an PCM-encoded audio file, in Hz.

    Commonly 44100 Hz or 48000 Hz.
    """

    def __init__(self: Any, value: AudioSampleRateLike):
        """Create a new instance of the AudioSampleRate component."""

        # You can define your own __init__ function as a member of AudioSampleRateExt in audio_sample_rate_ext.py
        self.__attrs_init__(value=value)

    value: float = field(converter=float)

    def __array__(self, dtype: npt.DTypeLike = None) -> npt.NDArray[Any]:
        # You can define your own __array__ function as a member of AudioSampleRateExt in audio_sample_rate_ext.py
        return np.asarray(self.value, dtype=dtype)

    def __float__(self) -> float:
        return float(self.value)


if TYPE_CHECKING:
    AudioSampleRateLike = Union[AudioSampleRate, float]
else:
    AudioSampleRateLike = Any

AudioSampleRateArrayLike = Union[AudioSampleRate, Sequence[AudioSampleRateLike], float, npt.NDArray[np.float32]]


class AudioSampleRateType(BaseExtensionType):
    _TYPE_NAME: str = "rerun.components.AudioSampleRate"

    def __init__(self) -> None:
        pa.ExtensionType.__init__(self, pa.float32(), self._TYPE_NAME)


class AudioSampleRateBatch(BaseBatch[AudioSampleRateArrayLike], ComponentBatchMixin):
    _ARROW_TYPE = AudioSampleRateType()

    @staticmethod
    def _native_to_pa_array(data: AudioSampleRateArrayLike, data_type: pa.DataType) -> pa.Array:
        raise NotImplementedError  # You need to implement native_to_pa_array_override in audio_sample_rate_ext.py
